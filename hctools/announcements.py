import base64
import requests
import subprocess
import mysql.connector 
from uuid import uuid4
from io import BytesIO
from pprint import pprint
from password import SQL_PASSWORD


""" FIXED NAMES OF BUCKETS OR DATABSES """
AUDIO_FILES_BUCKET = 'hackathon-audio-files'

""" PREFIXES IS FOR RUNNING OF HUAWEI LIBRARY COMMANDS """
OBSUTIL_PREFIX = './../obsutil/obsutil'

def sendRequest(command, userId, announcementText):
    mydb = mysql.connector.connect(
        host="192.168.0.27",
        user="root",
        password=SQL_PASSWORD,
        database='communication'
    )
    mycursor = mydb.cursor()
    sqlCommand = f"SELECT tunnelUrl FROM `tunnels` WHERE userId = '{userId}'"
    mycursor.execute(sqlCommand)
    result = mycursor.fetchone()
    if result == None:
        return {'status': 300, 'error': 'No tunnel URL found!'}
    url = f'{result[0]}/{command}' # Either recorded or announce message
    data = {'text': announcementText}
    try:
        response = requests.post(url, json=data)
        return {'status': response.status_code}
    except:
        return {'status': 300, 'error': 'Announcement Failed!'}
    return {}

def recordElderlyMessage(userId, audio):
    mydb = mysql.connector.connect(
        host="192.168.0.27",
        user="root",
        password=SQL_PASSWORD,
        database='communication'
    )
    mycursor = mydb.cursor()
    ''' INSERT INTO OBS'''
    with open("tmp.mp3", "wb") as audioFile:
        st = base64.b64decode(audio)
        audioFile.write(st)

    id = uuid4() 
    cmd =f'{OBSUTIL_PREFIX} cp tmp.mp3 obs://{AUDIO_FILES_BUCKET}/{id}.mp3'
    process = subprocess.run(cmd, shell=True, capture_output=True)
    obsUrl = f'https://{AUDIO_FILES_BUCKET}.obs.ap-southeast-3.myhuaweicloud.com/{id}.mp3'
    ''' INSERT INTO DB '''
    sqlCommand = f"INSERT INTO `announcements` (userId, audioLink, announcementText, author, timestamp) VALUES ({userId}, '{obsUrl}', 'placeholder', 'elderly', CURRENT_TIMESTAMP)"
    mycursor.execute(sqlCommand)
    mydb.commit()

    return sendRequest('announceAudio', userId, '')

def recordCaregiverMessage(userId, audio):
    mydb = mysql.connector.connect(
        host="192.168.0.27",
        user="root",
        password=SQL_PASSWORD,
        database='communication'
    )
    mycursor = mydb.cursor()
    ''' INSERT INTO OBS'''
    with open("tmp.mp3", "wb") as audioFile:
        st = base64.b64decode(audio)
        audioFile.write(st)

    id = uuid4() 
    cmd =f'{OBSUTIL_PREFIX} cp tmp.mp3 obs://{AUDIO_FILES_BUCKET}/{id}.mp3'
    process = subprocess.run(cmd, shell=True, capture_output=True)
    obsUrl = f'https://{AUDIO_FILES_BUCKET}.obs.ap-southeast-3.myhuaweicloud.com/{id}.mp3'
    ''' INSERT INTO DB '''
    sqlCommand = f"INSERT INTO `announcements` (userId, audioLink, announcementText, author, timestamp) VALUES ({userId}, '{obsUrl}', 'placeholder', 'caregiver', CURRENT_TIMESTAMP)"
    mycursor.execute(sqlCommand)
    mydb.commit()

    return sendRequest('announceAudio', userId, '')

def announceMessage(userId, announcementText):
    mydb = mysql.connector.connect(
        host="192.168.0.27",
        user="root",
        password=SQL_PASSWORD,
        database='communication'
    )
    mycursor = mydb.cursor()
    ''' INSERT INTO DB '''
    sqlCommand = f"INSERT INTO `announcements` (userId, announcementText, timestamp, author) VALUES ({userId}, '{announcementText}', CURRENT_TIMESTAMP, 'caregiver') "
    mycursor.execute(sqlCommand)
    mydb.commit()

    ''' SENDING REQUEST ''' 
    return sendRequest('announceMessage', userId, announcementText)

def announcementEndpointUpdate(userId, tunnelUrl):
    mydb = mysql.connector.connect(
        host="192.168.0.27",
        user="root",
        password=SQL_PASSWORD,
        database='communication'
    )
    mycursor = mydb.cursor()

    ''' CHECK IF USERID IS ALREADY IN DB ''' 
    sqlCommand = f"SELECT userId FROM `tunnels` WHERE userId = {userId}"
    mycursor.execute(sqlCommand)
    result = mycursor.fetchone()
    
    ''' NOT YET IN DB '''
    if result == None:
        mycursor.execute (f"INSERT INTO `tunnels` (userId, tunnelUrl) VALUES ({userId}, '{tunnelUrl}')")
        mydb.commit()
        return {'status': 200, 'comments': 'Created New Entry'}
    else:
        mycursor.execute (f"UPDATE `tunnels` SET tunnelUrl = '{tunnelUrl}' WHERE userId = {userId}")
        mydb.commit()
        return {'status': 200, 'comments': 'Updated Existing Entry'}

def getConversation(userId):
    mydb = mysql.connector.connect(
        host="192.168.0.27",
        user="root",
        password=SQL_PASSWORD,
        database='communication'
    )
    mycursor = mydb.cursor()
    sqlCommand = f"SELECT * FROM `announcements` WHERE userId = '{userId}'"
    mycursor.execute(sqlCommand)
    result = mycursor.fetchall()
    return [{
        'announcementId':i[0],
        'text': i[1],
        'timestamp': i[2].strftime("%Y/%m/%d, %H:%M:%S"),
        'userId': i[3],
        'audioLink': i[4],
        'author': i[5]
    } for i in result]

if __name__ == '__main__':
    #announcementEndpointUpdate(11, 'https://tidy-insect-49.loca.lt/') 
    #announceMessage(13, 'hello!')
    pprint(getConversation(9))

    #recordElderlyMessage(9, '')
